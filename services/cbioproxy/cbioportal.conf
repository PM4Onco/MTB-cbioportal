server
{

  listen 8080;
  # listen 443 ssl

  # ssl_certificate /etc/nginx/certs/ngxCert.crt;
  # ssl_certificate_key /etc/nginx/certs/ngxKey.key;

  # lua_ssl_verify_depth 2;
  # lua_ssl_trusted_certificate /etc/nginx/certs/ngxCert.crt;
  set_by_lua $NGINX_LOGINREQUIRED 'return os.getenv("NGINX_LOGINREQUIRED")';


  set $session_name nginx_session;

  location /attributes.json
  {

    sendfile on;
    sendfile_max_chunk 5m;
    tcp_nopush on;
    tcp_nodelay on;
    root /;

  }

  location ~ (/content|/css|/Data|/db-scripts|/fonts|/gfx|/images|/js|/reactapp|/swf)$
  {

    sendfile on;
    sendfile_max_chunk 5m;
    tcp_nopush on;
    tcp_nodelay on;
    root /usr/share/nginx/html;

  }

  location ~ ^/reports/(.+)/(.+)/(.+)$
  {

    set $study $1;
    set $patient $2;

    if ($NGINX_LOGINREQUIRED = 'true')
    {
      include /etc/nginx/conf.d/lua_resource_config.lua;
    }

    sendfile on;
    sendfile_max_chunk 5m;
    tcp_nopush on;
    tcp_nodelay on;
    root /usr/share;

  }

  client_max_body_size 0;

  location /
  {

    if ($NGINX_LOGINREQUIRED = 'true')
    {
      include /etc/nginx/conf.d/lua_auth_config.lua;
    }

    proxy_headers_hash_max_size 512;
    proxy_headers_hash_bucket_size 64;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_pass http://cbioportal:8080;

  }

  location /mtb
  {

    set $apply_login 'true';

    if ($request_method = GET)
    {
      set $apply_login 'false';
    }

    if ($NGINX_LOGINREQUIRED = 'false')
    {
      set $apply_login 'false';
    }

    if ($apply_login = 'true')
    {
      include /etc/nginx/conf.d/lua_auth_config.lua;
    }

    proxy_headers_hash_max_size 512;
    proxy_headers_hash_bucket_size 64;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_pass http://fhirspark:3001;


    location ~* /mtb/(.+)/permission
    {
      if ($NGINX_LOGINREQUIRED = 'true')
      {
        include /etc/nginx/conf.d/lua_auth_config.lua;
      }
      #add_header Access-Control-Allow-Origin '*';
      add_header Cache-Control 'no-cache, no-store, max-age=0';
      add_header Pragma 'no-cache';
      proxy_pass http://fhirspark:3001;
    }

    location /mtb/login
    {
      default_type 'text/html';
      if ($NGINX_LOGINREQUIRED = 'true')
      {
        include /etc/nginx/conf.d/lua_auth_config.lua;
      }
      include /etc/nginx/conf.d/lua_login_config.lua;
    }

    location /mtb/logout
    {
      if ($NGINX_LOGINREQUIRED = 'true')
      {
        include /etc/nginx/conf.d/lua_auth_config.lua;
      }
    }

    location /mtb/redirect
    {
      if ($NGINX_LOGINREQUIRED = 'true')
      {
        include /etc/nginx/conf.d/lua_auth_config.lua;
      }
    }

  }

  location /fhir
  {

    if ($NGINX_LOGINREQUIRED = 'true')
    {
      include /etc/nginx/conf.d/lua_auth_config.lua;
    }

    proxy_headers_hash_max_size 512;
    proxy_headers_hash_bucket_size 64;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_pass http://hapiserver:8080;

  }

  location /genome-nexus
  {

    resolver 127.0.0.11;

    rewrite ^/genome-nexus/(.*) /$1 break;
    proxy_headers_hash_max_size 512;
    proxy_headers_hash_bucket_size 64;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_pass http://genomenexus:8888;

  }

  location /auth
  {

    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-Forwarded-Proto $scheme;

    set_by_lua $keycloak 'return os.getenv("KEYCLOAK_URL")';

    proxy_pass $keycloak;
  }

  error_page 500 502 503 504 /50x.html;

  location = /50x.html
  {

    root /usr/share/nginx/html;

  }

}
